{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","curentKey","pressKey","event","setState","code","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAQaA,EAAb,4MACEC,MAAQ,CACNC,UAAW,IAFf,EAaEC,SAAW,SAACC,GACV,EAAKC,SAAS,CACZH,UAA0B,UAAfE,EAAME,KACb,QACAF,EAAMG,OAjBhB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKP,YAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,YAV/C,oBAqBE,WACE,IAAQD,EAAcQ,KAAKT,MAAnBC,UAER,OACE,qBAAKU,UAAU,MAAf,SACKV,EAEC,mBAAGU,UAAU,eAAb,4CAAyDV,EAAzD,OADA,mBAAGU,UAAU,eAAb,2CA3BZ,GAAyBC,IAAMC,W,MCH/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.83f7a8f3.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  curentKey: string,\n};\n\ntype Props = {};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    curentKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.pressKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.pressKey);\n  }\n\n  pressKey = (event: KeyboardEvent) => {\n    this.setState({\n      curentKey: event.code === 'Space'\n        ? 'space'\n        : event.key,\n    });\n  };\n\n  render() {\n    const { curentKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        {(!curentKey\n          ? <p className=\"App__message\">Nothing was pressed yet</p>\n          : <p className=\"App__message\">{`The last pressed key is [${curentKey}]`}</p>\n        )}\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}